{"version":3,"sources":["webpack:///webpack/bootstrap dbec7e4239652d0d8b2c","webpack:///./lib/cross_tire.js","webpack:///./lib/game.js","webpack:///./lib/tire.js","webpack:///./lib/util.js","webpack:///./lib/game_piece.js","webpack:///./lib/bearing.js","webpack:///./lib/pit.js","webpack:///./lib/gun.js","webpack:///./lib/sound_carousel.js","webpack:///./lib/game_view.js","webpack:///./lib/win_modal.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;;;;;;;ACXD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,yCAAyC;;AAEtE;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAmB,kCAAkC;AACrD;AACA,0BAAyB,4BAA4B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,8BAA8B;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACxJA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACxBA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACNA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC7FA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA0B;;AAE1B;AACA;;AAEA;;AAEA;;;;;;;ACrBA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;;AAGA;;AAEA;;AAEA;;;;;;;ACrFA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACzEA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACjBA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAoB,sBAAsB,EAAE;AAC5C,qBAAoB,sBAAsB,EAAE;AAC5C,qBAAoB,sBAAsB,EAAE;AAC5C,qBAAoB,sBAAsB,EAAE;;AAE5C,qBAAoB,uBAAuB,EAAE;AAC7C,qBAAoB,uBAAuB,EAAE;AAC7C,qBAAoB,uBAAuB,EAAE;AAC7C,qBAAoB,uBAAuB,EAAE;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;;;;;;AC9CA;AACA,yBAAwB;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dbec7e4239652d0d8b2c","const Game = require(\"./game\");\nconst GameView = require(\"./game_view\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  canvasEl.width = Game.TOTAL_WIDTH;\n  canvasEl.height = Game.TOTAL_HEIGHT;\n\n  const ctx = canvasEl.getContext(\"2d\");\n  const game = new Game();\n  new GameView(game, ctx).start();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/cross_tire.js\n// module id = 0\n// module chunks = 0","const Tire = require(\"./tire\");\nconst Bearing = require(\"./bearing\");\nconst Pit = require(\"./pit\");\nconst Gun = require(\"./gun\");\nconst WinModal = require(\"./win_modal\");\n\nclass Game {\n  constructor() {\n    this.gamePieces = [];\n    this.resetBoard = this.resetBoard.bind(this);\n    this.setTire = this.setTire.bind(this);\n    this.leftPit = new Pit();\n    this.rightPit = new Pit({pos: Game.TOTAL_WIDTH-this.leftPit.width});\n\n    this.leftGun = new Gun({\n      mountPoint: [0, Game.TOTAL_HEIGHT / 2],\n      angle: 0\n    });\n\n    this.rightGun = new Gun({\n      mountPoint: [Game.TOTAL_WIDTH, Game.TOTAL_HEIGHT / 2],\n      angle: Math.PI,\n      gunshotFile: './assets/gun_2.mp3'\n    });\n\n    this.resetBoard();\n\n    const bgMusic = new Audio(\"./assets/bg_dance.mp3\");\n    bgMusic.volume = 0.5;\n    bgMusic.loop = true;\n    bgMusic.play();\n}\n\n  resetBoard() {\n    this.leftPit.bearingStore = 10;\n    this.rightPit.bearingStore = 10;\n\n    this.gamePieces = [];\n    this.setTire();\n  }\n\n  resetGame() {\n    this.leftPit.lives = 10;\n    this.rightPit.lives = 10;\n  }\n\n  setTire() {\n    this.gamePieces.push(new Tire());\n  }\n\n  draw(ctx) {\n    ctx.clearRect(0, 0, Game.TOTAL_WIDTH, Game.TOTAL_HEIGHT);\n    ctx.fillStyle = Game.BG_COLOR;\n    // ctx.fillRect(0, 0, Game.TOTAL_WIDTH, Game.TOTAL_HEIGHT);\n    this.gamePieces.forEach( (piece) => {\n      piece.draw(ctx);\n    });\n    this.leftPit.draw(ctx);\n    this.rightPit.draw(ctx);\n\n    this.leftGun.draw(ctx);\n    this.rightGun.draw(ctx);\n  }\n\n  step(delta) {\n    this.moveObjects(delta);\n    this.checkWallCollisions();\n    this.checkPieceCollisions();\n  }\n\n  fireBearing(pit, gun) {\n    if (pit.bearingStore > 0) {\n      this.gamePieces.push(gun.fire());\n      pit.bearingStore--;\n    }\n  }\n\n  fireLeft() {\n    this.fireBearing(this.leftPit, this.leftGun);\n  }\n\n  fireRight() {\n    this.fireBearing(this.rightPit, this.rightGun);\n  }\n\n  checkPieceCollisions() {\n    for (let i = 0; i < (this.gamePieces.length - 1); i++) {\n      const p1 = this.gamePieces[i];\n      for (let j = i + 1; j < this.gamePieces.length; j++) {\n        let p2 = this.gamePieces[j];\n        if (p1.isCollidingWith(p2)) {\n          p1.handleCollision(p2);\n          break;\n        }\n      }\n    }\n  }\n\n  checkWallCollisions() {\n    for (let i = 0; i < (this.gamePieces.length); i++) {\n      const p = this.gamePieces[i];\n      let offset = null;\n\n      if (p.pos[0] + p.radius > Game.TOTAL_WIDTH) {\n        this.gamePieces.splice(this.gamePieces.indexOf(p), 1);\n        this.rightPit.receivePiece(p, this.resetBoard);\n        continue;\n      }\n\n      if (p.pos[0] - p.radius < 0) {\n        this.gamePieces.splice(this.gamePieces.indexOf(p), 1);\n        this.leftPit.receivePiece(p, this.resetBoard);\n        continue;\n      }\n\n      if (p.pos[1] + p.radius > Game.TOTAL_HEIGHT) {\n        offset = p.pos[1] + p.radius - Game.TOTAL_HEIGHT;\n        p.pos[1] -= offset;\n        p.vel[1] = -p.vel[1];\n      }\n\n      if (p.pos[1] - p.radius < 0) {\n        offset = p.radius - p.pos[1];\n        p.pos[1] += offset;\n        p.vel[1] = -p.vel[1];\n      }\n    }\n  }\n\n  moveObjects(delta) {\n    this.gamePieces.forEach( (piece) => {\n      piece.move(delta);\n    });\n  }\n\n  checkWin(ctx) {\n    if (this.leftPit.lives < 1) {\n      alert(\"Player Two Wins!\");\n      this.resetGame();\n    }\n\n    if (this.rightPit.lives < 1) {\n      alert(\"Player One Wins!\");\n      this.resetGame();\n    }\n  }\n}\n\nGame.TOTAL_WIDTH = 1400;\nGame.TOTAL_HEIGHT = 500;\nGame.BG_COLOR = \"beige\";\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 1\n// module chunks = 0","const Util = require(\"./util\");\nconst GamePiece = require(\"./game_piece\");\n\nconst DEFAULTS = {\n\tTIRE_COLOR: \"gray\",\n\tTIRE_RADIUS: 45,\n\tTIRE_POSITION: [700, 245 + (Math.random() * 10)],\n\tTIRE_MASS: 120,\n\tTIRE_IMAGE: \"./assets/tire.png\"\n};\n\nclass Tire extends GamePiece{\n  constructor(options={}) {\n    options.color = DEFAULTS.TIRE_COLOR;\n    options.pos = DEFAULTS.TIRE_POSITION;\n    options.radius = DEFAULTS.TIRE_RADIUS;\n\t\toptions.mass = DEFAULTS.TIRE_MASS;\n\t\toptions.image = DEFAULTS.TIRE_IMAGE;\n    options.vel = [0, 0];\n\t\tsuper(options);\n  }\n\n}\n\nmodule.exports = Tire;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/tire.js\n// module id = 2\n// module chunks = 0","const Util = {\n  contactAngle(pos1, pos2) {\n    return Math.atan2(pos2[1] - pos1[1], pos2[0] - pos1[0]);\n  }\n};\n\nmodule.exports = Util;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util.js\n// module id = 3\n// module chunks = 0","const Util = require(\"./util\");\n\nclass GamePiece {\n  constructor(options) {\n    this.pos = options.pos;\n    this.vel = options.vel;\n    this.radius = options.radius;\n    this.mass = options.mass;\n    this.color = options.color;\n    this.image = options.image;\n\n    this.isCollidingWith = this.isCollidingWith.bind(this);\n    this.handleCollision = this.handleCollision.bind(this);\n    this.totalVelocity = this.totalVelocity.bind(this);\n\n    this.movementAngle = this.movementAngle.bind(this);\n    this.distanceTo = this.distanceTo.bind(this);\n  }\n\n  draw(ctx) {\n    const img = new Image();\n    img.src = this.image;\n    ctx.drawImage(img, this.pos[0] - this.radius, this.pos[1] - this.radius, this.radius* 2, this.radius* 2);\n\n  }\n\n  move(timeDelta) {\n    // const velocityScale = timeDelta / FRAME_RATE;\n    const velocityScale = 5;\n    const offsetX = this.vel[0] * velocityScale;\n    const offsetY = this.vel[1] * velocityScale;\n\n    this.pos = [this.pos[0] + offsetX, this.pos[1] + offsetY];\n  }\n\n  totalVelocity() {\n    return Math.sqrt(Math.pow(this.vel[0], 2) + Math.pow(this.vel[1], 2));\n  }\n\n  movementAngle() {\n    if (this.totalVelocity() === 0) return 0;\n    return Math.acos(this.vel[0] / this.totalVelocity());\n  }\n\n  distanceTo(otherPiece) {\n    return Math.sqrt(\n        Math.pow((this.pos[0] - otherPiece.pos[0]), 2)\n      + Math.pow((this.pos[1] - otherPiece.pos[1]), 2)\n    );\n  }\n\n  isCollidingWith(otherPiece) {\n    if (this.pos[0] + this.radius + otherPiece.radius > otherPiece.pos[0]\n    && this.pos[0] < otherPiece.pos[0] + this.radius + otherPiece.radius\n    && this.pos[1] + this.radius + otherPiece.radius > otherPiece.pos[1]\n    && this.pos[1] < otherPiece.pos[1] + this.radius + otherPiece.radius) {\n      const distance = this.distanceTo(otherPiece);\n      if (distance < this.radius + otherPiece.radius) {\n        return true;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  handleCollision(otherPiece) {\n    const conAngle = Util.contactAngle(this.pos, otherPiece.pos);\n    const v1 = this.totalVelocity();\n    const v2 = otherPiece.totalVelocity();\n    const theta1 = this.movementAngle();\n    const theta2 = otherPiece.movementAngle();\n    const m1 = this.mass;\n    const m2 = otherPiece.mass;\n\n    const spread = (this.radius + otherPiece.radius) - this.distanceTo(otherPiece);\n\n    const sepX = spread * Math.cos(conAngle);\n    const sepY = spread * Math.sin(conAngle);\n\n    this.pos[0] -= sepX;\n    this.pos[1] -= sepY;\n\n    const punch = 0.75;\n\n    this.vel[0] -= punch*Math.cos(conAngle);\n    this.vel[1] -= punch*Math.sin(conAngle);\n    otherPiece.vel[0] += punch*Math.cos(conAngle);\n    otherPiece.vel[1] += punch*Math.sin(conAngle);\n  }\n}\n\nconst FRAME_RATE = 1000/60;\n\nmodule.exports = GamePiece;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_piece.js\n// module id = 4\n// module chunks = 0","const Util = require(\"./util\");\nconst GamePiece = require(\"./game_piece\");\n\n\nconst DEFAULTS = {\n\tcolor: \"cyan\",\n\tradius: 15,\n\tpos: [100, 300],\n  mass: 100,\n\tvel: [0, 0],\n\timage: \"./assets/bearing.png\"\n};\n\nclass Bearing extends GamePiece{\n  constructor(options = {}) {\n\n\t\tsuper(Object.assign(DEFAULTS, options));\n  }\n\n}\n\nmodule.exports = Bearing;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/bearing.js\n// module id = 5\n// module chunks = 0","const Tire = require(\"./tire\");\nconst Bearing = require(\"./bearing\");\n\n\nconst DEFAULTS = {\n\tpos: 0,\n\twidth: 100,\n\tcolor: \"yellow\",\n\tlives: 10\n};\n\nclass Pit{\n  constructor(options={}) {\n    this.bearingStore = Pit.STARTING_STORE;\n    const opts = Object.assign(DEFAULTS, options);\n\n    this.pos = opts.pos;\n    this.width = opts.width;\n    this.color = opts.color;\n\t\tthis.lives = opts.lives;\n  }\n\n  receivePiece(piece, callback=null) {\n    if (piece instanceof Bearing) {\n      this.bearingStore++;\n    } else if (piece instanceof Tire) {\n      this.lives--;\n\t\t\tcallback();\n    }\n  }\n\n  draw(ctx) {\n\n    ctx.beginPath();\n    ctx.rect(this.pos, 0, this.pos + this.width, ctx.canvas.height);\n\n    // add linear gradient\n    const grd = ctx.createLinearGradient(this.pos, 0, this.pos + this.width, ctx.canvas.height);\n    // light blue\n    grd.addColorStop(0, '#FFFFFF');\n    // dark blue\n    grd.addColorStop(1, '#000000');\n    ctx.fillStyle = grd;\n    ctx.fill();\n\n\n\t\tconst scoreX = this.pos + 50;\n\t\tconst scoreY = 30;\n\n\t\tctx.textAlign = 'center';\n\n\t\tctx.strokeStyle = \"black\";\n\t\tctx.fillStyle = \"black\";\n\t\tctx.lineWidth = 1;\n\n\t\tctx.font = \"25px sans-serif\";\n\t\tctx.fillText(\"LIVES\", scoreX, scoreY);\n\t\tctx.fillText(\"BALLS\", scoreX, scoreY + 80);\n\n\t\tctx.font = \"bold 45px sans-serif\";\n\n\t\tctx.fillStyle = this.metricColor(this.lives);\n\t\tctx.fillText(this.lives, scoreX, scoreY + 45);\n\t\tctx.strokeText(this.lives, scoreX, scoreY + 45);\n\n\t\tctx.fillStyle = this.metricColor(this.bearingStore);\n\t\tctx.fillText(this.bearingStore, scoreX, scoreY + 125);\n\t\tctx.strokeText(this.bearingStore, scoreX, scoreY + 125);\n  }\n\n\tmetricColor(metric) {\n\t\tif (metric < 4) {\n\t\t\treturn \"red\";\n\t\t} else if (metric < 8) {\n\t\t\treturn \"orange\";\n\t\t} else {\n\t\t\treturn \"green\";\n\t\t}\n\t}\n\n\n}\n\nPit.STARTING_STORE = 10;\n\nmodule.exports = Pit;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/pit.js\n// module id = 6\n// module chunks = 0","const Util = require(\"./util\");\nconst Bearing = require(\"./bearing\");\nconst SoundCarousel = require(\"./sound_carousel\");\n\nconst DEFAULTS = {\n\tmountPoint: [25,300],\n  power: 3,\n  length: 150,\n  width: 32,\n  color: \"red\",\n  angle: 0,\n\tgunshotFile: './assets/gun_1.mp3'\n};\n\nclass Gun {\n  constructor(options) {\n    const opts = Object.assign(DEFAULTS, options);\n    this.power = opts.power;\n    this.mountPoint = opts.mountPoint;\n    this.length = opts.length;\n    this.width = opts.width;\n    this.color = opts.color;\n    this.angle = opts.angle;\n\t\tthis.gunShotSound =\tnew SoundCarousel(opts.gunshotFile);\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n\n    ctx.beginPath();\n    ctx.moveTo(...this.mountPoint);\n    ctx.lineTo(...this.launchPoint());\n    ctx.lineWidth = this.width;\n    ctx.strokeStyle = this.color;\n    ctx.stroke();\n\n\t\tctx.closePath();\n\t\tctx.beginPath();\n\t\tctx.arc(this.mountPoint[0], this.mountPoint[1], 60, 0, 2 * Math.PI, false);\n\t\tctx.fillStyle = 'maroon';\n\n    ctx.fill();\n\n\t\tctx.strokeStyle = 'red';\n\t\tctx.lineWidth = 20;\n\t\tctx.stroke();\n\n  }\n\n  launchPoint() {\n    const launchX = this.mountPoint[0] + this.length * Math.cos(this.angle);\n    const launchY = this.mountPoint[1] + this.length * Math.sin(this.angle);\n    return [launchX, launchY];\n  }\n\n  launchVector(power=1) {\n    return [this.power * Math.cos(this.angle), this.power * Math.sin(this.angle)];\n  }\n\n  fire() {\n\t\tthis.gunShotSound.play();\n    return new Bearing( {\n      pos: this.launchPoint(),\n      vel: this.launchVector()\n    });\n  }\n\n  aim(angleDelta) {\n    this.angle += angleDelta;\n  }\n\n}\n\nmodule.exports = Gun;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/gun.js\n// module id = 7\n// module chunks = 0","class SoundCarousel{\n  constructor(filePath, ns=10) {\n    this.sounds = [];\n    this.soundIndex = 0;\n    this.ns = ns;\n\n    for (let i = 0; i < ns; i++) {\n      this.sounds.push(new Audio(filePath));\n    }\n  }\n\n  play() {\n    this.sounds[this.soundIndex % this.ns].play();\n    this.soundIndex++;\n  }\n}\n\nmodule.exports = SoundCarousel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sound_carousel.js\n// module id = 8\n// module chunks = 0","class GameView {\n  constructor(game, ctx) {\n    this.ctx = ctx;\n    this.game = game;\n  }\n\n  bindKeyHandlers() {\n    key('s', () => { this.game.fireLeft(); });\n    key('w', () => { this.game.fireLeft(); });\n    key('d', () => { this.game.fireLeft(); });\n    key('a', () => { this.game.fireLeft(); });\n\n    key('p', () => { this.game.fireRight(); });\n    key('k', () => { this.game.fireRight(); });\n    key('o', () => { this.game.fireRight(); });\n    key('l', () => { this.game.fireRight(); });\n  }\n\n  start() {\n    this.bindKeyHandlers();\n    this.lastTime = 0;\n    //start the animation\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  animate(time) {\n    const timeDelta = time - this.lastTime;\n\n    if(key.isPressed(\"e\")) this.game.leftGun.aim(-GameView.AIM_OFFSET);\n    if(key.isPressed(\"f\")) this.game.leftGun.aim(GameView.AIM_OFFSET);\n\n    if(key.isPressed(\"i\")) this.game.rightGun.aim(GameView.AIM_OFFSET);\n    if(key.isPressed(\"j\")) this.game.rightGun.aim(-GameView.AIM_OFFSET);\n\n    this.game.step(timeDelta);\n    this.game.draw(this.ctx);\n    this.game.checkWin();\n    this.lastTime = time;\n    //every call to animate requests causes another call to animate\n    requestAnimationFrame(this.animate.bind(this));\n  }\n}\n\nGameView.AIM_OFFSET = Math.PI / 75;\n\n\nmodule.exports = GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_view.js\n// module id = 9\n// module chunks = 0","class WinModal {\n  constructor(options={}) {\n    this.winner = options.winner;\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = \"yellow\";\n\n    ctx.rect(20,20,150,100);\n    ctx.stroke();\n\n  }\n\n  remove(ctx) {\n\n  }\n\n}\n\nmodule.exports = WinModal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/win_modal.js\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}